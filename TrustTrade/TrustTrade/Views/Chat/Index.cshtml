@model TrustTrade.Models.ViewModels.ChatIndexVM

@{
    ViewData["Title"] = "Messages";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h3 class="card-title mb-0">Messages</h3>
                    <!-- New "+" button that triggers the search modal -->
                    <button type="button" class="btn btn-accent rounded-circle new-conversation-btn"
                            data-bs-toggle="modal" data-bs-target="#newConversationModal">
                        <i class="bi bi-plus"></i>
                    </button>
                </div>
                <div class="card-body p-0">
                    @if (!Model.Conversations.Any())
                    {
                        <div class="text-center p-5">
                            <i class="bi bi-chat-square-text fs-1 text-accent mb-3"></i>
                            <h5>No messages yet</h5>
                            <p class="text-accent">
                                When you start a conversation with someone, it will appear here.
                                <br>
                                <button type="button" class="btn btn-accent mt-3" data-bs-toggle="modal"
                                        data-bs-target="#newConversationModal">
                                    <i class="bi bi-search me-1"></i> Find Users to Message
                                </button>
                            </p>
                        </div>
                    }
                    else
                    {
                        <div class="list-group list-group-flush">
                            @foreach (var conversation in Model.Conversations)
                            {
                                <a href="@Url.Action("Conversation", new { id = conversation.Id })"
                                   class="list-group-item list-group-item-action conversation-item @(conversation.HasUnreadMessages ? "unread-conversation" : "")">
                                    <div class="d-flex w-100 justify-content-between align-items-center">
                                        <div class="d-flex align-items-center">
                                            @if (conversation.OtherUserProfilePicture != null)
                                            {
                                                <img
                                                    src="data:image/jpeg;base64,@Convert.ToBase64String(conversation.OtherUserProfilePicture)"
                                                    class="rounded-circle me-3"
                                                    style="width: 3rem; height: 3rem; object-fit: cover;"
                                                    alt="Profile Picture">
                                            }
                                            else
                                            {
                                                <img src="/icons/defpfp.png" class="rounded-circle me-3"
                                                     style="width: 3rem; height: 3rem;" alt="Profile Picture">
                                            }
                                            <div>
                                                <h5 class="mb-1">@conversation.OtherUsername</h5>
                                                <p class="mb-1 @(conversation.HasUnreadMessages ? "fw-bold" : "text-muted")">@(conversation.LastMessage?.Length > 30 ? conversation.LastMessage.Substring(0, 30) + "..." : conversation.LastMessage)</p>
                                            </div>
                                        </div>
                                        <div class="text-end">
                                            <small
                                                class="text-muted d-block">@TrustTrade.Helpers.TimeAgoHelper.GetTimeAgo(conversation.LastMessageTime)</small>
                                            @if (conversation.HasUnreadMessages)
                                            {
                                                <span
                                                    class="badge bg-accent rounded-pill">@(conversation.UnreadCount > 99 ? "99+" : conversation.UnreadCount.ToString())</span>
                                            }
                                        </div>
                                    </div>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>

            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Conversations pagination" class="mt-3">
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1 })">Previous</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Previous</span>
                            </li>
                        }

                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1 })">Next</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item disabled">
                                <span class="page-link">Next</span>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

<!-- New Conversation Modal -->
<div class="modal fade" id="newConversationModal" tabindex="-1" aria-labelledby="newConversationModalLabel"
     aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newConversationModalLabel">Start New Conversation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="input-group mb-3">
                    <input type="text" class="form-control" id="userSearchInput" placeholder="Search for users..."
                           autocomplete="off">
                    <button class="btn btn-accent" type="button" id="searchButton">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
                <div id="userSearchResults" class="mt-3">
                    <p class="text-center text-muted">Search for users to start a conversation</p>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    body {
        min-height: 40vh;
    }
    
</style>

@section Scripts {
    <script src="~/js/chatSearch.js"></script>
}